#VRML V2.0 utf8

PROTO Boulder
[
	exposedField  SFVec3f translation 0 0 0
	exposedField  SFInt32 whichChoice -1
	eventIn       SFInt32 set_index
	eventIn       SFNode  set_script
	eventIn       SFTime fadeout
]
{
	DEF S Switch
	{
		whichChoice IS whichChoice
		choice
		[
			DEF T Transform
			{
				translation IS translation
				children
				[
					Shape
					{
						geometry IndexedFaceSet
						{
							coordIndex
							[
								0, 2, 4, 6, -1,
								7, 5, 3, 1, -1
								0, 1, 2, -1,
								2, 1, 3, -1,
								2, 3, 4, -1,
								4, 3, 5, -1,
								4, 5, 6, -1,
								6, 5, 7, -1
								6, 7, 0, -1,
								0, 7, 1, -1
							]
							coord Coordinate
							{
								point [ 0.5 0 0, 0.354 0.5 0.354, 0 0 0.5, -0.354 0.5 0.354, -0.5 0 0, -0.354 0.5 -0.354, 0 0 -0.5, 0.354 0.5 -0.354 ] 
							}
							color Color
							{
								color [ 0 0 0, 0 0 1, 0 1 0, 0 1 1, 1 0 0, 1 0 1, 1 1 0, 1 1 1 ]
							}
							colorIndex [ 1, 2, 3, 4, 5, 6, 7, 1, 2, 3 ]
							colorPerVertex FALSE
						}
						appearance Appearance
						{
							material DEF M Material
							{
								diffuseColor 1 0 0
								transparency 1
							}
				        }
					}
					DEF Clicker TouchSensor {}
					# Run once for 2 sec.
					DEF FadeIn TimeSensor
					{
						cycleInterval 2.0
					}
					DEF FadeOut TimeSensor
					{
						cycleInterval 2.0
					}
					DEF InvertFraction Script
					{ 
						eventIn SFFloat in_fraction_changed
						eventOut SFFloat out_fraction_changed
						eventIn SFBool isActive
						eventOut SFTime startTime
						eventIn SFVec3f translation_changed
						eventOut SFInt32 set_whichChoice
						eventIn SFTime touchTime
						eventIn SFInt32 set_index IS set_index
						eventIn SFNode set_script IS set_script
						eventIn SFTime fadeout IS fadeout
						field SFInt32 index 0
						field SFInt32 script 0
						field SFNode FadeOut USE FadeOut

					    url "javascript:
							function translation_changed(value, timestamp)
							{
								print('translation_changed: ' + value);
								startTime = timestamp;
								set_whichChoice = 0;
							}
							function in_fraction_changed(value)
							{
								out_fraction_changed = 1.0 - value;
							}
							function set_index(value)
							{
								index = value;
							}
							function set_script(value)
							{
								script = value;
							}
							function touchTime(value)
							{
								print('touchTime');
								FadeOut.startTime = value;
								script.boulder_touched = index;
							}
							function fadeout(timestamp)
							{
								FadeOut.startTime = timestamp;
							}
							function isActive(value)
							{
								print('isActive: ' + value);
								if (!value)
								{
									set_whichChoice = -1;
								}
							}"
					}
				]
				ROUTE FadeIn.fraction_changed TO InvertFraction.in_fraction_changed
				ROUTE InvertFraction.startTime TO FadeIn.startTime 
				ROUTE FadeOut.fraction_changed TO M.transparency
				ROUTE FadeOut.isActive TO InvertFraction.isActive
				ROUTE InvertFraction.out_fraction_changed TO M.transparency
				ROUTE Clicker.touchTime TO InvertFraction.touchTime
				ROUTE T.translation_changed TO InvertFraction.translation_changed
				ROUTE InvertFraction.set_whichChoice TO S.set_whichChoice
			}
		]
	}
}

